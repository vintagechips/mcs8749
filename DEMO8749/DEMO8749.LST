    1                   ;       DEMO8749 - MCS8749 PROGRAMING EXAMPLES
    2                   ;       ASSEMBLE COMMAND IN WIN32-X64
    3                   ;       MSDOS X8048 /L DEMO.ASM,DEMO,DEMO;
    4                   ;
    5                   ;       THANKS FOR PROVIDING COOL TOOLS
    6                   ;       MSDOS.EXE (http://takeda-toshiya.my.coocan.jp/m
    7                   ;       X8048.EXE (lost)
    8                   ;
    9                   ;       SEGMENT DEFINITION (MACHINE-DEPENDENT)
   10 007F              SEGA       EQU      01111111B
   11 00BF              SEGB       EQU      10111111B
   12 00F7              SEGC       EQU      11110111B
   13 00FE              SEGD       EQU      11111110B
   14 00FB              SEGE       EQU      11111011B
   15 00DF              SEGF       EQU      11011111B
   16 00EF              SEGG       EQU      11101111B
   17 00FD              SEGP       EQU      11111101B
   18                   ;
   19                   ;       NUMERIC IMAGE
   20 0012              FON0       EQU      SEGA&SEGB&SEGC&SEGD&SEGE&SEGF
   21 00B7              FON1       EQU      SEGB&SEGC
   22 002A              FON2       EQU      SEGA&SEGB&SEGD&SEGE&SEGG
   23 0026              FON3       EQU      SEGA&SEGB&SEGC&SEGD&SEGG
   24 0087              FON4       EQU      SEGB&SEGC&SEGF&SEGG
   25 0046              FON5       EQU      SEGA&SEGC&SEGD&SEGF&SEGG
   26 0042              FON6       EQU      SEGA&SEGC&SEGD&SEGE&SEGF&SEGG
   27 0037              FON7       EQU      SEGA&SEGB&SEGC
   28 0002              FON8       EQU      SEGA&SEGB&SEGC&SEGD&SEGE&SEGF&SEGG
   29 0006              FON9       EQU      SEGA&SEGB&SEGC&SEGD&SEGF&SEGG
   30 0003              FONA       EQU      SEGA&SEGB&SEGC&SEGE&SEGF&SEGG
   31 00C2              FONB       EQU      SEGC&SEGD&SEGE&SEGF&SEGG
   32 005A              FONC       EQU      SEGA&SEGD&SEGE&SEGF
   33 00A2              FOND       EQU      SEGB&SEGC&SEGD&SEGE&SEGG
   34 004A              FONE       EQU      SEGA&SEGD&SEGE&SEGF&SEGG
   35 004B              FONF       EQU      SEGA&SEGE&SEGF&SEGG
   36 00FF              FONN       EQU      0FFH
   37                   ;
   38                   ;       UPPER HALF IMAGE
   39 00E3              TOP0       EQU      SEGC&SEGE&SEGG
   40 00F7              TOP1       EQU      SEGC
   41 00E6              TOP2       EQU      SEGC&SEGD&SEGG
   42 00E6              TOP3       EQU      SEGC&SEGD&SEGG
   43 00F2              TOP4       EQU      SEGC&SEGD&SEGE
   44 00EA              TOP5       EQU      SEGD&SEGE&SEGG
   45 00EA              TOP6       EQU      SEGD&SEGE&SEGG
   46 00E7              TOP7       EQU      SEGC&SEGG
   47 00E2              TOP8       EQU      SEGC&SEGD&SEGE&SEGG
   48 00E2              TOP9       EQU      SEGC&SEGD&SEGE&SEGG
   49 00E2              TOPA       EQU      SEGC&SEGD&SEGE&SEGG
   50 00FA              TOPB       EQU      SEGD&SEGE
   51 00EB              TOPC       EQU      SEGE&SEGG
   52 00FA              TOPD       EQU      SEGD&SEGE
   53 00EA              TOPE       EQU      SEGD&SEGE&SEGG
   54 00EA              TOPF       EQU      SEGD&SEGE&SEGG
   55                   ;
   56                   ;       LOWER HALF IMAGE
   57 008F              BOT0       EQU      SEGB&SEGF&SEGG
   58 00BF              BOT1       EQU      SEGB
   59 004F              BOT2       EQU      SEGA&SEGF&SEGG
   60 002F              BOT3       EQU      SEGA&SEGB&SEGG
   61 003F              BOT4       EQU      SEGA&SEGB
   62 002F              BOT5       EQU      SEGA&SEGB&SEGG
   63 000F              BOT6       EQU      SEGA&SEGB&SEGF&SEGG
   64 00BF              BOT7       EQU      SEGB
   65 000F              BOT8       EQU      SEGA&SEGB&SEGF&SEGG
   66 002F              BOT9       EQU      SEGA&SEGB&SEGG
   67 001F              BOTA       EQU      SEGA&SEGB&SEGF
   68 000F              BOTB       EQU      SEGA&SEGB&SEGF&SEGG
   69 00CF              BOTC       EQU      SEGF&SEGG
   70 000F              BOTD       EQU      SEGA&SEGB&SEGF&SEGG
   71 004F              BOTE       EQU      SEGA&SEGF&SEGG
   72 005F              BOTF       EQU      SEGA&SEGF
   73                   ;
   74                   ;       RESET VECTOR
   75 0000                         ORG      00H
   76 0000 2400                    JMP      INIT        ; JUMP MAIN ROUTINE
   77                   ;
   78                   ;       EXTERNAL INTERRUPT VECTOR
   79 0003                         ORG      03H
   80 0003 93                      RETR                 ; DO NOTHING
   81                   ;
   82                   ;       TIMER INTERRUPT VECTOR
   83 0007                         ORG      07H
   84                   ;
   85                   ;       TIMER INTERRUPT SERVICE ROUTINE
   86                   ;       DISPLAY VRAM IMAGE, AND COUNT UP TICK
   87 0007 D5                      SEL      RB1         ; SELECT SUB RESISTER B
   88 0008 2303                    MOV      A,#03H      ; USE LOWER 2 BITS
   89 000A 5F                      ANL      A,R7        ; GET DIGIT NUMBER(0-3)
   90 000B AF                      MOV      R7,A        ; SAVE DIGIT NUMBER
   91 000C 960F                    JNZ      L001        ; ONCE PER 4 TIMES,
   92 000E 10                      INC      @R0         ; INCREMENT TICK
   93                   ;
   94 000F B921         L001       MOV      R1,#VRAM    ; VRAM BASE ADDRESS
   95 0011 69                      ADD      A,R1        ; VRAM DIGIT POINTER
   96 0012 A9                      MOV      R1,A        ; SET IT TO R1
   97                   ;
   98 0013 9AF0                    ANL      P2,#0F0H    ; TURN OFF ALL DIGIT
   99 0015 F1                      MOV      A,@R1       ; GET SEGMENT IMAGE
  100 0016 39                      OUTL     P1,A        ; SET SEGMENT
  101 0017 FF                      MOV      A,R7        ; RESTORE DIGIT NUMBER
  102 0018 0300                    ADD      A,#DTBL&0FFH ; DIGIT CONTROLL BASE 
  103 001A E3                      MOVP3    A,@A        ; GET DIGIT CONTROL
  104 001B 3A                      OUTL     P2,A        ; DIGIT ON
  105                   ;
  106 001C 1F                      INC      R7          ; INCREMENT DIGIT FOR N
  107 001D 42                      MOV      A,T         ; GET TIMER COUNT
  108 001E 03CC                    ADD      A,#204      ; 180Hz, FOR SOME REASO
  109 0020 62                      MOV      T,A         ; SET TIMER COUNT
  110 0021 93                      RETR                 ; EXIT INTERRUPT
  111                   ;
  112                   ;       PTON
  113                   ;       CONVERT POSITIVE TO NEGATIVE
  114                   ;       A: NUMERIC
  115 0022 37           PTON:      CPL      A           ; CONVERT STEP1
  116 0023 17                      INC      A           ; CONVERT STEP2
  117 0024 93                      RETR
  118                   ;
  119                   ;       DELY
  120                   ;       WAIT UNTIL TICK COUNTS MATCH
  121                   ;       R2: TICK COUNT (INCREMENTED BY 45Hz)
  122 0025 B820         DLAY:      MOV      R0,#TICK    ; TICK POINTER
  123 0027 B000                    MOV      @R0,#00H    ; CLEAR TICK
  124 0029 FA           L002       MOV      A,R2        ; GET PARAM
  125 002A 1422                    CALL     PTON        ; CONVERT TO NEGATIVE
  126 002C 60                      ADD      A,@R0       ; SAME AS SUBTRACTION
  127 002D E629                    JNC      L002        ; WAIT FOR TICK > R2
  128 002F 93                      RETR
  129                   ;
  130                   ;       BADD
  131                   ;       BINARY ADDITION
  132                   ;       R1: 2 BYTES AUGEND POINTER
  133                   ;       R2: ADDEND
  134 0030 FA           BADD:      MOV      A,R2
  135 0031 61                      ADD      A,@R1
  136 0032 A1                      MOV      @R1,A
  137 0033 E637                    JNC      L014
  138 0035 C9                      DEC      R1
  139 0036 11                      INC      @R1
  140 0037 93           L014       RETR
  141                   ;
  142                   ;       BSUB
  143                   ;       BINARY SUBTRACTION
  144                   ;       R1: 2 BYTES MINUEND POINTER
  145                   ;       R2: SUBTRAHEND
  146 0038 FA           BSUB:      MOV      A,R2
  147 0039 1422                    CALL     PTON
  148 003B 61                      ADD      A,@R1
  149 003C A1                      MOV      @R1,A
  150 003D F643                    JC       L015
  151 003F C9                      DEC      R1
  152 0040 F1                      MOV      A,@R1
  153 0041 07                      DEC      A
  154 0042 A1                      MOV      @R1,A
  155 0043 93           L015       RETR
  156                   ;
  157                   ;       DADD
  158                   ;       DECIMAL ADDITION
  159                   ;       R1: LOWER OF 2 BYTES AUGEND POINTER
  160                   ;       R2: ADDEND
  161 0044 FA           DADD:      MOV      A,R2        ; GET ADDEND
  162 0045 61                      ADD      A,@R1       ; ADD LOWER AUGEND
  163 0046 57                      DA       A           ; DECIMAL ADJUST
  164 0047 A1                      MOV      @R1,A       ; STORE RESULT
  165 0048 E650                    JNC      L011        ; IF NOT CARRY, RETURN
  166 004A C9                      DEC      R1          ; UPPER BYTE
  167 004B 2301                    MOV      A,#1        ; GET 1
  168 004D 61                      ADD      A,@R1       ; ADD UPPER AUGEND
  169 004E 57                      DA       A           ; DECIMAL ADJUST
  170 004F A1                      MOV      @R1,A       ; STORE RESULT
  171 0050 93           L011       RETR
  172                   ;
  173                   ;       DSUB
  174                   ;       DECIMAL SUBTRACTION
  175                   ;       R1: LOWER OF 2 BYTES MINUEND POINTER
  176                   ;       R2: SUBTRAHEND
  177 0051 FA           DSUB:      MOV      A,R2        ; GET SUBTRAHEND
  178 0052 1422                    CALL     PTON        ; CONVERT POSITIVE TO N
  179 0054 039A                    ADD      A,#9AH      ; ADD MAGIC NUMBER
  180 0056 61                      ADD      A,@R1       ; SUBTRACT LOWER MINUEN
  181 0057 57                      DA       A           ; DECIMAL ADJUST
  182 0058 A1                      MOV      @R1,A       ; STORE RESULT
  183 0059 F661                    JC       L013        ; IF CARRY, RETURN
  184 005B C9                      DEC      R1          ; UPPER BYTE
  185 005C 2399                    MOV      A,#99H      ; MAGIC NUMBER
  186 005E 61                      ADD      A,@R1       ; ADD UPPER MINUEND
  187 005F 57                      DA       A           ; DECIMAL ADJUST
  188 0060 A1                      MOV      @R1,A       ; STORE RESULT
  189 0061 93           L013       RETR
  190                   ;
  191                   ;       DCHG
  192                   ;       DISPLAY CHANGE BY TEMPORARY IMAGE
  193 0062 B825         DCHG:      MOV      R0,#TIMG    ; TEMPORARY IMAGE POINT
  194 0064 B921                    MOV      R1,#VRAM    ; VRAM BASE ADDRESS
  195 0066 BF04                    MOV      R7,#4       ; DIGIT COUNTER (4 TO 1
  196 0068 FE                      MOV      A,R6        ; COPY STEP 1
  197 0069 AD                      MOV      R5,A        ; COPY STEP 2
  198 006A FD           L005       MOV      A,R5        ; GET UPDATE FLAG
  199 006B 67                      RRC      A           ; CHECK LSB
  200 006C AD                      MOV      R5,A        ; SAVE FOR NEXT
  201 006D E671                    JNC      L006        ; IF LSB=0, DO NOTHING
  202 006F F0                      MOV      A,@R0       ; GET TEMPORARY IMAGE
  203 0070 A1                      MOV      @R1,A       ; SAVE IT VRAM
  204 0071 18           L006       INC      R0          ; NEXT TEMPORARY IMAGE
  205 0072 19                      INC      R1          ; NEXT VRAM ADDRESS
  206 0073 EF6A                    DJNZ     R7,L005     ; LOOP DIGIT 4 TO 1
  207 0075 93                      RETR
  208                   ;
  209                   ;       PUTN
  210                   ;       DISPLAY NUMERIC
  211 0076 B821         PUTN:      MOV      R0,#VRAM    ; VRAM POINTER
  212 0078 B929                    MOV      R1,#NNOW    ; NUMERIC POINTER
  213 007A BA24                    MOV      R2,#FTBL    ; FONT TABLE
  214 007C BB90                    MOV      R3,#TPNC    ; COMMAND TABLE
  215                   ;
  216                   ;       NTOI
  217                   ;       NUMERIC TO IMAGE
  218 007E BF04         NTOI:      MOV      R7,#4       ; DIGIT COUNTER (4 TO 1
  219 0080 148B         L007       CALL     BREN        ; BRANCH COMMAND FOR EA
  220 0082 530F                    ANL      A,#0FH      ; GET DIGIT NUMBER
  221 0084 6A                      ADD      A,R2        ; FONT TABLE LOOKUP
  222 0085 E3                      MOVP3    A,@A        ; GET FONT
  223 0086 A0                      MOV      @R0,A       ; STORE FONT
  224 0087 18                      INC      R0          ; NEXT DIGIT
  225 0088 EF80                    DJNZ     R7,L007     ; LOOP
  226 008A 93                      RETR
  227                   ;
  228                   ;       BREN
  229                   ;       BRANCH COMMAND FOR EACH NIBBLE
  230 008B FF           BREN:      MOV      A,R7        ; GET DIGIT
  231 008C 5301                    ANL      A,#01H      ; UPPER OR LOWER NIBBLE
  232 008E 6B                      ADD      A,R3        ; COMMAND TABLE SETUP
  233 008F B3                      JMPP     @A          ; JUMP SUB COMMAND
  234                   ;
  235                   ;       PUTN SUB COMMAND VECTOR TABLE
  236 0090 92           TPNC       DB       PNC1        ; UPPER NIBBLE
  237 0091 95                      DB       PNC2        ; LOWER NIBBLE
  238                   ;
  239                   ;       FOR UPPER NIBBLE
  240 0092 F1           PNC1:      MOV      A,@R1       ; GET BYTE
  241 0093 47                      SWAP     A           ; SWAP NIBBLE
  242 0094 93                      RETR                 ; BACK
  243                   ;
  244                   ;       FOR LOWER NIBBLE
  245 0095 F1           PNC2:      MOV      A,@R1       ; GET BYTE
  246 0096 19                      INC      R1          ; NEXT BYTE
  247 0097 93                      RETR                 ; BACK
  248                   ;
  249                   ;       PUTS
  250                   ;       CHANGE DISPLAY WITH ANIMATION
  251 0098 B82B         PUTS:      MOV      R0,#NNEW    ; NEW NUMBER
  252 009A B929                    MOV      R1,#NNOW    ; CURRENT NUMBER
  253 009C BBF2                    MOV      R3,#TPSC    ; COMMAND TABLE
  254                   ;
  255                   ;       SETUP UPDATE FLAG TO R6
  256 009E BE00                    MOV      R6,#00H     ; CLEAR FLAGS
  257 00A0 BF04                    MOV      R7,#4       ; DIGIT COUNTER (4 TO 1
  258 00A2 FE           L003       MOV      A,R6        ; ROTATE RIGHT STEP1
  259 00A3 77                      RR       A           ; ROTATE RIGHT STEP2
  260 00A4 AE                      MOV      R6,A        ; ROTATE RIGHT STEP3
  261 00A5 148B                    CALL     BREN        ; BRANCH COMMAND FOR EA
  262 00A7 530F                    ANL      A,#0FH      ; GET COMPARE RESULT
  263 00A9 C6AF                    JZ       L004        ; IF EQUAL, DO NOTHING
  264 00AB FE                      MOV      A,R6        ; BIT SET STEP1
  265 00AC 4308                    ORL      A,#08H      ; BIT SET STEP2
  266 00AE AE                      MOV      R6,A        ; BIT SET STEP3
  267 00AF EFA2         L004       DJNZ     R7,L003     ; LOOP DIGIT 4 TO 1
  268                   ;
  269                   ;       FLAME OUT
  270 00B1 B825                    MOV      R0,#TIMG    ; TEMPORARY IMAGE POINT
  271 00B3 B929                    MOV      R1,#NNOW    ; NUMERIC POINTER
  272 00B5 BA04                    MOV      R2,#LTBL    ; FONT TABLE POINTER
  273 00B7 BB90                    MOV      R3,#TPNC    ; COMMAND TABLE
  274 00B9 147E                    CALL     NTOI        ; SETUP TEMPORARY IMAGE
  275 00BB 1462                    CALL     DCHG        ; DISPLAY CHANGE BY TEM
  276 00BD BA04                    MOV      R2,#4       ; FOR 4/45 SEC,
  277 00BF 1425                    CALL     DLAY        ; MAINTAIN DISPLAY
  278                   ;
  279                   ;       BLANK
  280 00C1 BF04                    MOV      R7,#4
  281 00C3 B921                    MOV      R1,#VRAM    ; VRAM BASE ADDRESS
  282 00C5 FE                      MOV      A,R6        ; COPY STEP 1
  283 00C6 AD                      MOV      R5,A        ; COPY STEP 2
  284 00C7 FD           L008       MOV      A,R5        ; GET UPDATE FLAG
  285 00C8 67                      RRC      A           ; CHECK LSB
  286 00C9 AD                      MOV      R5,A        ; SAVE FOR NEXT
  287 00CA E6CE                    JNC      L012        ; IF LSB=0, DO NOTHING
  288 00CC B1FF                    MOV      @R1,#FONN   ; BLANK
  289 00CE 19           L012       INC      R1          ; NEXT DIGIT
  290 00CF EFC7                    DJNZ     R7,L008     ; LOOP DIGIT 4 TO 1
  291 00D1 BA08                    MOV      R2,#8       ; FOR 8/45 SEC,
  292 00D3 1425                    CALL     DLAY        ; MAINTAIN DISPLAY
  293                   ;
  294                   ;       FLAME IN
  295 00D5 B825                    MOV      R0,#TIMG    ; TEMPORARY IMAGE POINT
  296 00D7 B92B                    MOV      R1,#NNEW    ; NEW NUMBER  POINTER
  297 00D9 BA14                    MOV      R2,#UTBL    ; FONT TABLE POINTER
  298 00DB BB90                    MOV      R3,#TPNC    ; COMMAND TABLE
  299 00DD 147E                    CALL     NTOI        ; SETUP TEMPORARY IMAGE
  300 00DF 1462                    CALL     DCHG        ; DISPLAY CHANGE BY TEM
  301 00E1 BA04                    MOV      R2,#4       ; FOR 4/45 SEC,
  302 00E3 1425                    CALL     DLAY        ; MAINTAIN DISPLAY
  303                   ;
  304                   ;       UPDATE NUMERIC
  305 00E5 B829         UPDN:      MOV      R0,#NNOW    ; CURRENT NUMERIC POINT
  306 00E7 B92B                    MOV      R1,#NNEW    ; UPDATE NUMERIC POINTE
  307 00E9 F1                      MOV      A,@R1       ; GET UPDATE NUMERIC
  308 00EA A0                      MOV      @R0,A       ; PUT CURRENT NUMERIC
  309 00EB 18                      INC      R0          ; NEXT BYTE
  310 00EC 19                      INC      R1          ; NEXT BYTE
  311 00ED F1                      MOV      A,@R1       ; GET UPDATE NUMERIC
  312 00EE A0                      MOV      @R0,A       ; PUT CURRENT NUMERIC
  313 00EF 1476                    CALL     PUTN        ; DISPLAY NUMERIC
  314 00F1 93                      RETR
  315                   ;
  316                   ;       PUTS SUB COMMAND VECTOR TABLE
  317 00F2 F4           TPSC       DB       PSC1        ; UPPER NIBBLE
  318 00F3 F9                      DB       PSC2        ; LOWER NIBBLE
  319                   ;
  320                   ;       FOR UPPER NIBBLE
  321 00F4 F0           PSC1:      MOV      A,@R0       ; GET NEW NUMBER
  322 00F5 D1                      XRL      A,@R1       ; COMPARE CURRENT NUMBE
  323 00F6 AA                      MOV      R2,A        ; SAVE RESULT
  324 00F7 47                      SWAP     A           ; SWAP NIBBLE
  325 00F8 93                      RETR                 ; BACK
  326                   ;
  327                   ;       FOR LOWER NIBBLE
  328 00F9 FA           PSC2:      MOV      A,R2        ; RESTORE COMPARE RESUL
  329 00FA 18                      INC      R0          ; NEXT BYTE
  330 00FB 19                      INC      R1          ; NEXT BYTE
  331 00FC 93                      RETR                 ; BACK
  332                   ;
  333                   ;       MAIN ROUTINE
  334 0100                         ORG      100H
  335 0100 9AF0         INIT:      ANL      P2,#0F0H    ; TURN OFF ALL DIGIT
  336 0102 65                      STOP     TCNT        ; STOP TIMER
  337 0103 00                      NOP                  ; CLEAR TIMER FLAG
  338                   ;
  339 0104 D5                      SEL      RB1         ; SELECT SUB RESISTER B
  340 0105 B820                    MOV      R0,#TICK    ; SET TICK POINTER
  341 0107 BF00                    MOV      R7,#0       ; INITIAL DIGIT NUMBER
  342 0109 C5                      SEL      RB0         ; RESTORE RESISTER BANK
  343                   ;
  344 010A 25                      EN       TCNTI       ; ENABLE TIMER INTERRUP
  345 010B 55                      STRT     T           ; START TIMER
  346                   ;
  347                   ;       INITIAL DISPLAY
  348 010C B929                    MOV      R1,#NNOW    ; CURRENT NUMERIC POINT
  349 010E B187                    MOV      @R1,#87H    ; SET 87H
  350 0110 19                      INC      R1          ; NEXT DIGIT
  351 0111 B149                    MOV      @R1,#49H    ; SET 49H
  352 0113 1476                    CALL     PUTN        ; DISPLAY CURRENT NUMER
  353 0115 BA2D                    MOV      R2,#45      ; FOR 45/45 SEC,
  354 0117 1425                    CALL     DLAY        ; MAINTAIN DISPLAY
  355                   ;
  356                   ;       COUNT UP/DOWN
  357 0119 B92B                    MOV      R1,#NNEW    ; UPDATE NUMERIC POINTE
  358 011B B100                    MOV      @R1,#00H    ; SET 0
  359 011D 19                      INC      R1          ; NEXT DIGIT
  360 011E B100                    MOV      @R1,#00H    ; SET 0
  361 0120 14E5                    CALL     UPDN        ; UPDATE NUMERIC
  362 0122 1425         TEST:      CALL     DLAY        ; MAINTAIN DISPLAY
  363 0124 B92C                    MOV      R1,#NNEW+1  ; LOWER OF 2 BYTES POIN
  364 0126 BA05                    MOV      R2,#5       ; COUNT STEP
  365 0128 2636                    JNT0     L016        ; IF T0 PUSHED, JUMP
  366 012A BA01                    MOV      R2,#1       ; COUNT STEP
  367 012C 463E                    JNT1     L017        ; IF T1 PUSHED, JUMP
  368                   ;
  369 012E 1444                    CALL     DADD        ; DECIMAL ADDITION
  370 0130 1498                    CALL     PUTS        ; CHANGE DISPLAY WITH A
  371 0132 BA2D                    MOV      R2,#45      ; FOR 45/45 SEC,
  372 0134 2422                    JMP      TEST
  373 0136 1444         L016       CALL     DADD        ; DECIMAL ADDITION
  374 0138 14E5                    CALL     UPDN        ; UPDATE NUMERIC
  375 013A BA01                    MOV      R2,#1       ; FOR 1/45 SEC,
  376 013C 2422                    JMP      TEST
  377 013E 1451         L017       CALL     DSUB        ; DECIMAL SUBTRACTION
  378 0140 14E5                    CALL     UPDN        ; UPDATE NUMERIC
  379 0142 BA05                    MOV      R2,#5       ; FOR 5/45 SEC,
  380 0144 2422                    JMP      TEST
  381                   ;
  382 0146 2446                    JMP      $           ; STOP
  383                   ;
  384                   ;
  385 0300                         ORG      300H
  386                   ;       DIGIT CONTROLL TABLE
  387 0300 80402010     DTBL       DB       80H,40H,20H,10H
  388                   ;
  389                   ;       SEGMENT IMAGE TABLE
  390 0304 8FBF4F2F     LTBL       DB       BOT0, BOT1, BOT2, BOT3
  391 0308 3F2F0FBF                DB       BOT4, BOT5, BOT6, BOT7
  392 030C 0F2F1F0F                DB       BOT8, BOT9, BOTA, BOTB
  393 0310 CF0F4F5F                DB       BOTC, BOTD, BOTE, BOTF
  394 0314 E3F7E6E6     UTBL       DB       TOP0, TOP1, TOP2, TOP3
  395 0318 F2EAEAE7                DB       TOP4, TOP5, TOP6, TOP7
  396 031C E2E2E2FA                DB       TOP8, TOP9, TOPA, TOPB
  397 0320 EBFAEAEA                DB       TOPC, TOPD, TOPE, TOPF
  398 0324 12B72A26     FTBL       DB       FON0, FON1, FON2, FON3
  399 0328 87464237                DB       FON4, FON5, FON6, FON7
  400 032C 020603C2                DB       FON8, FON9, FONA, FONB
  401 0330 5AA24A4B                DB       FONC, FOND, FONE, FONF
  402                   ;
  403                   ;       VARIABLES (RAM)
  404 0020                         ORG      20H
  405 0020              TICK       DS       1           ; INCREMENT 45/SEC
  406 0021              VRAM       DS       4           ; IMAGE
  407 0025              TIMG       DS       4           ; TEMPORARY IMAGE
  408 0029              NNOW       DS       2           ; NUMERIC
  409 002B              NNEW       DS       2           ; NUMERIC FOR UPDATE
  410                   ;
  411 002D                         END
